{"version":3,"sources":["components/PlayerForm.js","components/PlayerList.js","components/TeamList.js","App.js","reportWebVitals.js","index.js"],"names":["PlayerForm","_ref","onAddPlayer","name","setName","useState","score","setScore","_jsxs","onSubmit","e","preventDefault","trim","children","_jsx","type","value","onChange","target","required","min","max","parseInt","isNaN","PlayerList","players","onSelectPlayer","onDeletePlayer","selectedPlayers","maxSelectionReached","className","map","player","index","onClick","includes","concat","stopPropagation","TeamList","teams","calculateTeamScore","team","idx","App","setPlayers","setSelectedPlayers","setTeams","warningMessage","setWarningMessage","generateBalancedTeams","sortedPlayers","sort","a","b","team1","team2","team1Score","team2Score","length","push","filter","p","generateRandomPlayers","randomPlayers","names","i","Math","floor","random","FaUser","_Fragment","shuffleTeams","shuffledPlayers","array","j","shuffleArray","newTeams","deleteAllPlayers","FaTrashAlt","reduce","total","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.1c0db153.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction PlayerForm({ onAddPlayer }) {\n  const [name, setName] = useState('');\n  const [score, setScore] = useState('');\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleScoreChange = (e) => {\n    const value = parseInt(e.target.value);\n    if (!isNaN(value) && value >= 1 && value <= 10) {\n      setScore(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name.trim() === '' || score === '') return;\n    onAddPlayer({ name, score });\n    setName('');\n    setScore('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Nombre:\n        <input type=\"text\" value={name} onChange={handleNameChange} required />\n      </label>\n      <label>\n        Puntaje (1-10):\n        <input type=\"number\" min=\"1\" max=\"10\" value={score} onChange={handleScoreChange} required />\n      </label>\n      <button type=\"submit\">Agregar Jugador</button>\n    </form>\n  );\n}\n\nexport default PlayerForm;\n","import React from 'react';\n\nfunction PlayerList({ players, onSelectPlayer, onDeletePlayer, selectedPlayers, maxSelectionReached }) {\n  return (\n    <div className=\"player-list\">\n      <ul>\n        {players.map((player, index) => (\n          <li\n            key={index}\n            onClick={() => !maxSelectionReached || selectedPlayers.includes(player) ? onSelectPlayer(player) : null}\n            className={`player-item ${selectedPlayers.includes(player) ? 'selected' : ''} ${maxSelectionReached && !selectedPlayers.includes(player) ? 'disabled' : ''}`}\n          >\n            <span>{player.name} - <span className=\"player-score\">{player.score}</span></span>\n            <button onClick={(e) => { e.stopPropagation(); onDeletePlayer(player); }}>Eliminar</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default PlayerList;\n","import React from 'react';\n\nfunction TeamList({ teams, calculateTeamScore }) {\n  return (\n    <div className=\"team-container\">\n      {teams.map((team, index) => (\n        <div key={index} className=\"team-list\">\n          <h2>Equipo {index + 1}</h2>\n          <ul>\n            {team.map((player, idx) => (\n              <li key={idx}>{player.name}</li>\n            ))}\n          </ul>\n          <p className=\"team-score\">{calculateTeamScore(team)}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default TeamList;\n","import React, { useState } from 'react';\nimport PlayerForm from './components/PlayerForm';\nimport PlayerList from './components/PlayerList';\nimport TeamList from './components/TeamList';\nimport './styles.css';\nimport { FaUser, FaTrashAlt } from 'react-icons/fa';\n\nfunction App() {\n  const [players, setPlayers] = useState([]);\n  const [selectedPlayers, setSelectedPlayers] = useState([]);\n  const [teams, setTeams] = useState([]);\n  const [warningMessage, setWarningMessage] = useState('');\n\n  const addPlayer = (player) => {\n    setPlayers([...players, player]);\n  };\n\n  const selectPlayer = (player) => {\n    if (selectedPlayers.includes(player)) {\n      setSelectedPlayers(selectedPlayers.filter((p) => p !== player));\n      setWarningMessage('');\n    } else {\n      if (selectedPlayers.length >= 10) {\n        setWarningMessage('Solo se pueden seleccionar 10 jugadores');\n      } else {\n        setSelectedPlayers([...selectedPlayers, player]);\n        setWarningMessage('');\n      }\n    }\n  };\n\n  const deletePlayer = (player) => {\n    setPlayers(players.filter((p) => p !== player));\n    setSelectedPlayers(selectedPlayers.filter((p) => p !== player));\n  };\n\n  const deleteAllPlayers = () => {\n    setPlayers([]);\n    setSelectedPlayers([]);\n    setTeams([]);\n    setWarningMessage('');\n  };\n\n  const shuffleArray = (array) => {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  };\n\n  const shuffleTeams = () => {\n    const shuffledPlayers = shuffleArray(selectedPlayers);\n    const newTeams = generateBalancedTeams(shuffledPlayers);\n    setTeams(newTeams);\n  };\n\n  const generateBalancedTeams = (selectedPlayers) => {\n    const sortedPlayers = [...selectedPlayers].sort((a, b) => b.score - a.score);\n    const team1 = [];\n    const team2 = [];\n    let team1Score = 0;\n    let team2Score = 0;\n\n    for (let player of sortedPlayers) {\n      if (team1.length < 5 && (team1Score <= team2Score || team2.length >= 5)) {\n        team1.push(player);\n        team1Score += player.score;\n      } else if (team2.length < 5) {\n        team2.push(player);\n        team2Score += player.score;\n      }\n    }\n\n    return [team1, team2];\n  };\n\n  const calculateTeamScore = (team) => {\n    return team.reduce((total, player) => total + player.score, 0);\n  };\n\n  const generateRandomPlayers = () => {\n    const randomPlayers = [];\n    const names = ['John', 'Jane', 'Mike', 'Anna', 'Chris', 'Katie', 'Paul', 'Laura', 'Tom', 'Linda', 'Sarah', 'David', 'Emily', 'James', 'Jessica'];\n\n    for (let i = 0; i < 15; i++) {\n      const name = names[Math.floor(Math.random() * names.length)];\n      const score = Math.floor(Math.random() * 10) + 1;\n      randomPlayers.push({ name: `${name}`, score });\n    }\n\n    setPlayers(randomPlayers);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Team Balancer</h1>\n      <div className=\"content\">\n        <div className=\"player-form\">\n          <PlayerForm onAddPlayer={addPlayer} />\n        </div>\n        <div className=\"player-list\">\n          <PlayerList\n            players={players}\n            onSelectPlayer={selectPlayer}\n            onDeletePlayer={deletePlayer}\n            selectedPlayers={selectedPlayers}\n            maxSelectionReached={selectedPlayers.length >= 10}\n          />\n        </div>\n      </div>\n      <div className=\"button-container\">\n        <button className=\"generate-random-players-button\" onClick={generateRandomPlayers}>\n          <FaUser className=\"icon\" /> Generar Jugadores Aleatorios\n        </button>\n        {selectedPlayers.length >= 10 && (\n          <>\n            <button className=\"generate-teams-button\" onClick={() => setTeams(generateBalancedTeams(selectedPlayers))}>\n              Generar Equipos\n            </button>\n            <button className=\"shuffle-teams-button\" onClick={shuffleTeams}>\n              Randomizar Equipos\n            </button>\n          </>\n        )}\n        <button className=\"delete-all-button\" onClick={deleteAllPlayers}>\n          <FaTrashAlt className=\"icon\" />\n        </button>\n      </div>\n      {warningMessage && <p className=\"warning-message\">{warningMessage}</p>}\n      <TeamList teams={teams} calculateTeamScore={calculateTeamScore} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}